docker load -i /docker/works/images/others/redis-master.tar 
docker load -i /docker/works/images/others/guestbook-redis-slave.tar 
docker load -i /docker/works/images/others/guestbook-php-frontend.tar


docker load -i /docker/works/images/k8s/tar/quagga.tar
docker run -itd --name=router --privileged --net=host index.alauda.cn/georce/router
docker start `docker ps -a |grep 'index.alauda.cn/georce/router'|awk '{print $1}'`

for SERVICES in etcd kube-dns kube-apiserver kube-controller-manager kube-scheduler; do
systemctl restart $SERVICES
systemctl status $SERVICES
done

systemctl enable kube-dns
systemctl restart kube-dns
systemctl status kube-dns

for SERVICES in kube-proxy kubelet docker; do
systemctl restart $SERVICES
systemctl status $SERVICES
done

kube-apiserver --bind-address=0.0.0.0 \
 --etcd-servers=--etcd-servers=http://192.168.10.6:2379,http://192.168.10.7:2379,http://192.168.10.8:2379 \
 --allow-privileged=true \
 --service-cluster-ip-range=10.254.0.0/16 \
 --secure-port=443 \
 --advertise-address=192.168.10.6 \
 --admission-control=NamespaceLifecycle,LimitRanger,ServiceAccount,ResourceQuota \
 --tls-cert-file=/k8s/kubernetes/apiserver.crt \
 --tls-private-key-file=/k8s/kubernetes/apiserver.key \
 --client-ca-file=/k8s/kubernetes/ca.crt \
 --service-account-key-file=/k8s/kubernetes/apiserver.key \
 --basic-auth-file=/k8s/kubernetes/basic_auth.csv

 curl https://kube-apiserver/api/v1/nodes \
  --cert /k8s/kubernetes/apiserver.crt \
  --key /k8s/kubernetes/apiserver.key --cacert /k8s/kubernetes/ca.crt

  kubectl --kubeconfig=/k8s/.kube/config proxy

kube-controller-manager --kubeconfig=/k8s/.kube/config \
 --service-account-private-key-file=/k8s/kubernetes/apiserver.key \
 --root-ca-file=/k8s/kubernetes/ca.crt

kube-scheduler --kubeconfig=/k8s/.kube/config


kubelet --require-kubeconfig \
 --kubeconfig=/k8s/.kube/config \
 --allow-privileged=true \
 --cluster-domain=cluster.local \
 --hostname-override=k8s-node1 \
 --cluster-dns=10.254.0.10

kube-proxy --kubeconfig=/k8s/.kube/config \
 --proxy-mode=iptables


kubelet --require-kubeconfig \
 --kubeconfig=/k8s/.kube/config \
 --allow-privileged=true \
 --cluster-domain=cluster.local \
 --hostname-override=k8s-node2 \
 --cluster-dns=10.254.0.10

kube-proxy --kubeconfig=/k8s/.kube/config \
 --proxy-mode=iptables

mkdir -p /k8s/kubernetes /k8s/.kube
/k8s/.kube/config
current-context: default-context
apiVersion: v1
clusters:
- cluster:
    certificate-authority: /k8s/kubernetes/ca.crt
    server: https://192.168.10.6
  name: default-cluster
contexts:
- context:
    cluster: default-cluster
    user: admin
  name: default-context
- context:
kind: Config
preferences: {}
users:
- name: admin
  user:
    client-certificate: /k8s/kubernetes/admin.crt
    client-key: /k8s/kubernetes/admin.key


